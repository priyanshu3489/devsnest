//A binary tree is named Even-Odd if it meets the following conditions:
The root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.
For every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).
For every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).
Given the root of a binary tree, return 1 if the binary tree is Even-Odd, otherwise return 0.

def solve(root):
    q = deque([root, None])
    prev = 0
    even = True
    while len(q)>1:
        el = q.popleft()
        if el:
            if even:
                if el.val > prev and el.val%2:
                    prev = el.val
                else:
                    return 0
            else:
                if el.val < prev and not el.val%2:
                    prev = el.val
                else:
                    return 0
            if el.left:
                q.append(el.left)
            if el.right:
                q.append(el.right)
        else:
            even = not even
            if even:
                prev = 0
            else:
                prev = 10000000
            q.append(None)
    return 1
